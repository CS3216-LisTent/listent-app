# Ansible playbook for deploying a Flask app

---
- hosts: webservers
  become: yes
  become_method: sudo
  tasks:
  - name: add yarn apt key
    apt_key:
      url: https://dl.yarnpkg.com/debian/pubkey.gpg
  - name: add yarn debian repo
    apt_repository:
      repo: deb https://dl.yarnpkg.com/debian/ stable main
      filename: yarn
  - name: install packages
    apt: 
      name: "{{ packages }}"
      update_cache: yes
    vars:
      packages:
        - nginx
        - gunicorn
        - python3-pip
        - yarn

- hosts: webservers
  become: yes
  become_method: sudo
  tasks:
  - name: clone repo
    git:
      repo: "git@github.com:{{ lookup('env','GITHUB_REPOSITORY') }}.git"
      dest: /var/www/{{ app_name }}
      update: yes
      key_file: /root/.ssh/ec2-github
      accept_hostkey: yes

- hosts: webservers
  become: yes
  become_method: sudo
  tasks:
  - name: Install needed python packages
    pip:
      requirements: backend/requirements.txt
      chdir: /var/www/{{ app_name }}

- hosts: webservers
  become: yes
  become_method: sudo
  tasks:
    - name: build react app
      shell:
        cmd: yarn install && yarn build
        chdir: /var/www/{{ app_name }}/client

- hosts: webservers
  become: yes
  become_method: sudo
  tasks:
  - name: template systemd service config
    template:
      src: deploy/gunicorn.service
      dest: /etc/systemd/system/{{ app_name }}.service
  - name: start systemd app service
    systemd: name={{ app_name }}.service state=restarted enabled=yes
  - name: template nginx site config
    template:
      src: deploy/nginx.conf
      dest: /etc/nginx/sites-available/{{ app_name }}.conf
  - name: remove default nginx site config
    file: path=/etc/nginx/sites-enabled/default state=absent
  - name: enable nginx site
    file:
      src: /etc/nginx/sites-available/{{ app_name }}.conf
      dest: /etc/nginx/sites-enabled/{{ app_name }}.conf
      state: link
      force: yes
  - name: restart nginx
    systemd: name=nginx state=restarted enabled=yes
